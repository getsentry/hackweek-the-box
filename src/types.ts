import { Sound, Voice } from "./audio.js";
export interface Commit {
  id: string;
  message: string;
  dateCreated: string;
  author: Author;
  pr: string;
  releases: string[];
}

export interface Author {
  id: string;
  name: string;
  username: string;
  email: string;
}

// Generated by https://quicktype.io

export interface Release {
  id: number;
  version: string;
  status: string;
  versionInfo: VersionInfo;
  dateReleased: null;
  dateCreated: string;
  commitCount: number;
  deployCount: number;
  lastDeploy: LastDeploy;
  authors: Author[];
  projects: Project[];
}

export interface LastDeploy {
  environment: string;
}

export interface VersionInfo {
  package: string;

  buildHash: string;
}

export interface Project {
  id: string;
  slug: string;
}

export interface MatchConfig {
  author: string;
  type: string;
  scope: string;
}

export interface Rule {
  match: Partial<MatchConfig>;
  play: Partial<RuleConfig>;
}

export interface ParsedCommit {
  author: Author;
  type: CommitType;
  scope?: string;
  subject?: string;
}

export type CommitType =
  | "feat"
  | "fix"
  | "ref"
  | "chore"
  | "test"
  | "revert"
  | "unknown";

interface BaseConfig {
  voice: Voice;
  sound?: Sound;
  light: boolean;
}

export interface RuleConfig extends BaseConfig {
  nickname: string;
}

export interface AnnouncementConfig extends BaseConfig {
  message: string;
}
